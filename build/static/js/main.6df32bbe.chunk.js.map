{"version":3,"sources":["components/Container/Container.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Container/Container.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form","htmlFor","labelForm","formInput","type","onChange","pattern","title","id","required","btnAdd","Component","ContactList","contacts","onDeleteContact","contactList","map","contactItem","nameForm","numberForm","btnDelete","onClick","svgBtnDelete","src","alt","defaultProps","Container","children","container","Filter","filterLabel","App","filter","formSubmitHandler","newContact","find","alert","deleteContact","prevState","changeFilter","filterContacts","normalizedFilter","toLowerCase","contact","includes","sort","a","b","localeCompare","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","console","log","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6df32bbe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__8m1eR\",\"title\":\"Container_title__s_n9X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__K0o5i\",\"formInput\":\"Filter_formInput__27MNr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__36FhP\",\"labelForm\":\"ContactForm_labelForm__XWuhO\",\"formInput\":\"ContactForm_formInput__1NlOH\",\"btnAdd\":\"ContactForm_btnAdd__1oKh7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"svgBtnDelete\":\"ContactList_svgBtnDelete__qgjhI\",\"btnDelete\":\"ContactList_btnDelete__3O4_A\",\"contactItem\":\"ContactList_contactItem__1Sqew\",\"nameForm\":\"ContactList_nameForm__22yD6\",\"numberForm\":\"ContactList_numberForm__3wcst\"};","import { Component } from \"react\";\nimport shortid from \"shortid\";\nimport s from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label htmlFor={this.nameInputId} className={s.labelForm}>\n          Name\n        </label>\n        <input\n          className={s.formInput}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={this.handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          id={this.nameInputId}\n          required\n        />\n        <br />\n        <label htmlFor={this.numberInputId} className={s.labelForm}>\n          {\" \"}\n          Number\n        </label>\n        <input\n          className={s.formInput}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={this.handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          id={this.numberInputId}\n          required\n        />\n        <br />\n        <button className={s.btnAdd} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.contactItem}>\n          <span className={s.nameForm}>{name}:</span>\n          <span className={s.numberForm}>{number}</span>\n          <button\n            className={s.btnDelete}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            <img\n              className={s.svgBtnDelete}\n              src=\"https://img.icons8.com/external-kiranshastry-lineal-color-kiranshastry/64/000000/external-delete-multimedia-kiranshastry-lineal-color-kiranshastry.png\"\n              alt=\"delete button\"\n            />\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\nContactList.defaultProps = {\n  name: \"Name Surname\",\n  number: \"123 456 789\",\n};\n\nContactList.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\nexport default ContactList;\n","import s from \"./Container.module.css\";\n\nfunction Container({ title, children }) {\n  return (\n    <div className={s.container}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nexport default Container;\n","import React from \"react\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.filterLabel}>\n    Find contacts by name\n    <input\n      className={s.formInput}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nexport default Filter;\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Container from \"./components/Container\";\nimport contacts from \"./contacts.json\";\nimport shortid from \"shortid\";\nimport Filter from \"./components/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: contacts,\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({contacts: parsedContacts})\n      }\n  }\n  \n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  formSubmitHandler = ({ name, number }) => {\n    const { contacts } = this.state;\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    contacts.find((newContact) => newContact.name === name)\n      ? alert(`${name} is already in contacts`)\n      : contacts.find((newContact) => newContact.number === number)\n      ? alert(`${number} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [newContact, ...contacts],\n        }));\n  };\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contacts) => contacts.id !== id),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts\n      .filter((contact) =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      )\n      .sort((a, b) => a.name.localeCompare(b.name));\n  };\n\n  render() {\n    console.log('render');\n    const visibleContacts = this.filterContacts();\n    const { filter } = this.state;\n\n    return (\n      <>\n        <Container title={\"Phonebook\"}>\n          <ContactForm onSubmit={this.formSubmitHandler} />\n        </Container>\n\n        <Container title={\"Contacts\"}>\n          <Filter value={filter} onChange={this.changeFilter} />\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}